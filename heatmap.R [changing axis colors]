# Filename: heatmap.R
# Part of: 1KGP_sweeps_enformer_project
# Contains: Script to create a heatmap basd on the normalized Enformer predictions with colored axis labels.
# Debbie Lilly, July 2023

library(readr)
library("gplots")

# Load normalized Enformer predictions and convert prediction values from string -> double
tsv_path <- "/vast/palmer/home.mccleary/dal83/project/1KGP_sweeps_enformer_project/scripts/enformer_scripts/norm_transcription_window_sums_labeled.tsv"
tsv_file <- readr::read_tsv(tsv_path)
matrix_data <- as.matrix(tsv_file)
rownames(matrix_data) <- matrix_data[,1]
num_matrix <- matrix(as.numeric(matrix_data), nrow=nrow(matrix_data), ncol=ncol(matrix_data))
rownames(num_matrix) <- rownames(matrix_data)
colnames(num_matrix) <- colnames(matrix_data)

# Creating a subset of the data because num_matrix takes a lot of time/memory to load in its entirety
#sample_start <- 1
#sample_end <- 500
#subset <- num_matrix[450:610, sample_start:sample_end]

# Creating a matrix to label the x-axis based on ref SNP (black) and alt SNP (red)
gens <- as.matrix(readr::read_tsv("/vast/palmer/home.mccleary/dal83/project/1KGP_sweeps_enformer_project/scripts/heatmaps/Book3.tsv"))
new_matrix <- matrix(nrow = nrow(gens), ncol = ncol(gens))
colnames(new_matrix) <- colnames(gens)
for(col in 1:ncol(gens)) {
  new_matrix[,col] = ifelse(gens[col] == 1, "red", "black")
}
# Heatmap colored by presence of ref/alt allele
heatmap.2(subset, trace="none", colCol = c(new_matrix[1,(start-1):(end-1)]))

# Creating a matrix to label the x-axis based on populations
# -->The row * 2 stuff is b/c there are twice as many samples than the original VCF data (_1 and _2 allele)
pop_data <- as.matrix(readr::read_tsv("/vast/palmer/home.mccleary/dal83/project/1KGP_sweeps_enformer_project/scripts/heatmaps/pop_data2.tsv"))
pop_grouping <- matrix(nrow = nrow(pop_data) * 2, ncol = 3)
pop_grouping[,1] <- colnames(gens)
for(row in 1:nrow(pop_data)) {
  p <- pop_data[row, 3]
  pop_grouping[(row * 2 - 1), 2] <- pop_data[row, 3]
  pop_grouping[(row*2), 2] <- pop_data[row, 3]
  if (p == "AFR") {
    c <- "orange"
  } else if (p == "AMR") {
    c <- "blue"
  } else if (p == "EAS") {
    c <- "green"
  } else if (p == "EUR") {
    c <- "yellow"
  } else if (p == "SAS") {
    c <- "purple"
  }
  pop_grouping[(row * 2 - 1), 3] <- c
  pop_grouping[(row * 2), 3] <- c
}

# Heatmap colored by population info
heatmap.2(subset, trace="none", colCol = c(pop_grouping[(start-1):(end-1), 3]))


# NOTE: the row * 2 stuff is because there are twice as many samples here than in the original VCF data, since each human sample is split into _1 and _2
